{"version":3,"sources":["../../src/components/CartProvider.tsx","../../src/hooks/useCart.ts"],"sourcesContent":["\"use client\";\n\nimport { createContext, useEffect, useState, ReactNode } from \"react\";\n\nimport {\n  ShopifyClient,\n  ShopifyCart,\n  BuyerIdentityInput,\n  CartAttribute,\n  LineItemInput,\n} from \"@t\";\n\nexport interface CartContextType {\n  cart: ShopifyCart | null;\n  loading: boolean;\n  addProducts: (lines: LineItemInput[]) => Promise<void>;\n  addMultipleProducts: (lines: LineItemInput[]) => Promise<void>;\n  removeProduct: (lineId: string) => Promise<void>;\n  updateQuantity: (lineId: string, quantity: number) => Promise<void>;\n  applyDiscountCode: (code: string) => Promise<void>;\n  removeDiscountCode: () => Promise<void>;\n  emptyCart: () => Promise<void>;\n  mergeCarts: (sourceCartId: string) => Promise<void>;\n  updateBuyerIdentity: (buyerIdentity: BuyerIdentityInput) => Promise<void>;\n  updateCartAttributes: (attributes: CartAttribute[]) => Promise<void>;\n  resetCart: () => Promise<void>;\n  totalCount: number;\n  totalPrice: number;\n}\n\nexport const CartContext = createContext<CartContextType | undefined>(\n  undefined\n);\n\nexport function CartProvider({\n  children,\n  client,\n}: {\n  children: ReactNode;\n  client: ShopifyClient;\n}) {\n  const [cart, setCart] = useState<ShopifyCart | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [totalCount, setTotalCount] = useState<number>(0);\n  const [totalPrice, setTotalPrice] = useState<number>(0);\n\n  useEffect(() => {\n    const init = async () => {\n      const storedCartId = localStorage.getItem(\"shopify_cart_id\");\n      try {\n        let initialCart: ShopifyCart;\n        if (storedCartId) {\n          initialCart = await client.getCart(storedCartId);\n        } else {\n          initialCart = await client.createCart();\n          localStorage.setItem(\"shopify_cart_id\", initialCart.id);\n        }\n        updateCartState(initialCart);\n      } catch (err) {\n        console.error(\"Cart init error\", err);\n      }\n      setLoading(false);\n    };\n\n    init();\n\n    window.addEventListener(\"storage\", (e) => {\n      if (e.key === \"shopify_cart_id\") init();\n    });\n  }, [client]);\n\n  const updateCartState = (cart: ShopifyCart) => {\n    setCart(cart);\n    const total = cart.lines.reduce(\n      (sum, line) => sum + (line.quantity || 0),\n      0\n    );\n    const price = parseFloat(cart.cost.totalAmount.amount || \"0\");\n    setTotalCount(total);\n    setTotalPrice(price);\n  };\n\n  const addProducts = async (lines: LineItemInput[]) => {\n    if (!cart) return;\n    setLoading(true);\n    const updated = await client.addToCart(cart.id, lines);\n    updateCartState(updated);\n    setLoading(false);\n  };\n\n  const addMultipleProducts = async (lines: LineItemInput[]) => {\n    if (!cart) return;\n    setLoading(true);\n    const updated = await client.addMultipleLines(cart.id, lines);\n    updateCartState(updated);\n    setLoading(false);\n  };\n\n  const removeProduct = async (lineId: string) => {\n    if (!cart) return;\n    setLoading(true);\n    const updated = await client.removeFromCart(cart.id, lineId);\n    updateCartState(updated);\n    setLoading(false);\n  };\n\n  const updateQuantity = async (lineId: string, quantity: number) => {\n    if (!cart) return;\n    setLoading(true);\n    const updated = await client.updateCartItem(cart.id, lineId, quantity);\n    updateCartState(updated);\n    setLoading(false);\n  };\n\n  const applyDiscountCode = async (code: string) => {\n    if (!cart) return;\n    setLoading(true);\n    const updated = await client.applyDiscount(cart.id, code);\n    updateCartState(updated);\n    setLoading(false);\n  };\n\n  const removeDiscountCode = async () => {\n    if (!cart) return;\n    setLoading(true);\n    const updated = await client.removeDiscount(cart.id);\n    updateCartState(updated);\n    setLoading(false);\n  };\n\n  const emptyCart = async () => {\n    if (!cart) return;\n    setLoading(true);\n    const updated = await client.emptyCart(cart.id);\n    updateCartState(updated);\n    setLoading(false);\n  };\n\n  const mergeCarts = async (sourceCartId: string) => {\n    if (!cart) return;\n    setLoading(true);\n    const updated = await client.mergeCarts(sourceCartId, cart.id);\n    updateCartState(updated);\n    setLoading(false);\n  };\n\n  const updateBuyerIdentity = async (buyerIdentity: BuyerIdentityInput) => {\n    if (!cart) return;\n    setLoading(true);\n    const updated = await client.updateBuyerIdentity(cart.id, buyerIdentity);\n    updateCartState(updated);\n    setLoading(false);\n  };\n\n  const updateCartAttributes = async (attributes: CartAttribute[]) => {\n    if (!cart) return;\n    setLoading(true);\n    const updated = await client.updateCartAttributes(cart.id, attributes);\n    updateCartState(updated);\n    setLoading(false);\n  };\n\n  const resetCart = async () => {\n    setLoading(true);\n    const newCart = await client.createCart();\n    localStorage.setItem(\"shopify_cart_id\", newCart.id);\n    updateCartState(newCart);\n    setLoading(false);\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        cart,\n        loading,\n        addProducts,\n        addMultipleProducts,\n        removeProduct,\n        updateQuantity,\n        applyDiscountCode,\n        removeDiscountCode,\n        emptyCart,\n        mergeCarts,\n        updateBuyerIdentity,\n        updateCartAttributes,\n        resetCart,\n        totalCount,\n        totalPrice,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n}\n","import { useContext } from \"react\";\nimport { CartContext, CartContextType } from \"@components/CartProvider\";\n\nexport function useCart(): CartContextType {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error(\"useCart must be used within a CartProvider\");\n  }\n  return context;\n}\n"],"mappings":"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","names":["cart"]}